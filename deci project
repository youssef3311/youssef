import time
import random


def print_pause(message, delay=2):
    print(message)
    time.sleep(delay)


def intro(wand_color, enemy):
    print_pause("You find yourself in an open field with grass and flowers.")
    print_pause(f"People say a {enemy} is nearby causing trouble.")
    print_pause("In front of you, there is a house.")
    print_pause("To your right, there is a dark cave.")
    print_pause(f"You hold a {wand_color} magic wand.")


def field(score, wand_color, enemy, turns):
    print_pause("\nWhat would you like to do next?")
    print_pause("1. Knock on the door of the house.")
    print_pause("2. Look inside the cave.")
    print_pause("Please enter 1 or 2.")

    while True:
        choice = input("> ").strip()
        if choice in ('1', '2'):
            break
        print_pause("Please enter a valid option: 1 or 2.")

    if choice == '1':
        house(score, wand_color, enemy, turns)
    else:
        cave(score, wand_color, enemy, turns)


def cave(score, wand_color, enemy, turns):
    print_pause("\nYou enter the cave carefully.")
    if wand_color == "glowing":
        print_pause("There is nothing new here. You already have the glowing wand.")
        print_pause("You return to the field.")
    else:
        print_pause("You find a magic wand inside the cave! It starts glowing.")
        wand_color = "glowing"
        score += 5
        print_pause(f"Your score increases to {score}.")

    turns += 1
    check_game(score, turns, wand_color, enemy)


def house(score, wand_color, enemy, turns):
    print_pause(f"\nYou approach the house. Suddenly, a {enemy} appears!")
    print_pause("It looks angry.")
    print_pause("What will you do?")
    print_pause("1. Use your wand to fight.")
    print_pause("2. Run back to the field.")

    while True:
        choice = input("> ").strip()
        if choice in ('1', '2'):
            break
        print_pause("Please enter a valid option: 1 or 2.")

    if choice == '1':
        score = fight(score, wand_color, enemy, turns)
    else:
        print_pause("You run back to the field.")
        turns += 1
        check_game(score, turns, wand_color, enemy)


def fight(score, wand_color, enemy, turns):
    print_pause(f"\nYou wave your {wand_color} wand and cast a spell...")
    chance = random.randint(1, 10)

    success_threshold = 4 if wand_color == "glowing" else 7

    if chance > success_threshold:
        print_pause(f"The {enemy} is scared and runs away!")
        score += 10
        print_pause(f"Your score is now {score}.")
        turns += 1
        check_game(score, turns, wand_color, enemy)
        return score
    else:
        print_pause(f"The spell fails. The {enemy} attacks you!")
        score -= 5
        print_pause(f"Your score drops to {score}.")

        if score <= 0:
            game_over(score, False)
        else:
            turns += 1
            print_pause("You escape back to the field.")
            check_game(score, turns, wand_color, enemy)
        return score


def check_game(score, turns, wand_color, enemy):
    MAX_TURNS = 10
    WIN_SCORE = 20
    LOSE_SCORE = 0

    if score >= WIN_SCORE:
        game_over(score, True)
    elif score <= LOSE_SCORE:
        game_over(score, False)
    elif turns >= MAX_TURNS:
        if score >= WIN_SCORE:
            game_over(score, True)
        else:
            game_over(score, False)
    else:
        field(score, wand_color, enemy, turns)


def game_over(score, won):
    print_pause("\nGAME OVER")
    if won:
        print_pause(f"Congratulations! You won with {score} points!")
    else:
        print_pause(f"Sorry, you lost. Your final score is {score}.")

    print_pause("Would you like to play again? (y/n)")
    while True:
        choice = input("> ").strip().lower()
        if choice in ('y', 'n'):
            break
        print_pause("Please enter 'y' for yes or 'n' for no.")

    if choice == 'y':
        print_pause("\nStarting a new game...\n")
        play_game()
    else:
        print_pause("Thank you for playing. Goodbye.")
        exit()


def play_game():
    wand_colors = ['red', 'blue', 'green', 'purple', 'silver']
    enemies = ['troll', 'wicked fairy', 'pirate', 'goblin']

    wand_color = random.choice(wand_colors)
    enemy = random.choice(enemies)
    score = 10
    turns = 0

    intro(wand_color, enemy)
    field(score, wand_color, enemy, turns)


if __name__ == "__main__":
    play_game()
